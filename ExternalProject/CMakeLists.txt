#Generated by VisualGDB project wizard.
#Note: VisualGDB will automatically update this file when you add new sources to the project.

cmake_minimum_required(VERSION 3.14)
project(ExternalProject)

include (GNUInstallDirs)

set(LIBRARIES_FROM_REFERENCES "")

add_library(ExternalProjectLibrary SHARED ExternalProjectLibrary.cpp private/PrivateHeader.h public/ExternalProjectLibrary.h)
target_include_directories(ExternalProjectLibrary
	PUBLIC
		$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/public>
		$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
	PRIVATE	private
)
target_link_libraries(ExternalProjectLibrary "${LIBRARIES_FROM_REFERENCES}")
set_target_properties(ExternalProjectLibrary PROPERTIES
	PUBLIC_HEADER public/ExternalProjectLibrary.h
	#PRIVATE_HEADER private/PrivateHeader.h
)

# Uses defaults
#install(TARGETS ExternalProjectLibrary
#	EXPORT FindExternalProjectLibrary
#)

# Install the library in the standard locations whether it is a static or shared library.
install(TARGETS ExternalProjectLibrary
	EXPORT FindExternalProjectLibrary
	PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
    #RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
	ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
	LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
)
# Export the Find<x>.cmake files.
install(EXPORT FindExternalProjectLibrary DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake)
